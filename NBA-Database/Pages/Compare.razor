@page "/compare"

@using BlazorBootstrap.Extensions
@using Color = System.Drawing.Color

<button @onclick="ShowChart" style="display: @(showChart ? "none" : "block"); left:300px;top:300px;">Mostrar gráfica</button>

<div style="display: @(showChart ? "block" : "none")">
    <LineChart @ref="lineChart" Width="600" Class="mb-4" Style="background-color:white" />
</div>



@code {
    private LineChart lineChart;

    private ChartData chartData;
    private LineChartOptions chartOptions;
    private bool showChart = false;

    private async Task ShowChart()
    {
        if (!showChart)
        {
            showChart = true;
            await lineChart.UpdateAsync(chartData, chartOptions);
        }
    }

    Random random = new Random();

    protected override void OnInitialized()
    {
        chartData = new ChartData
            {
                Labels = new List<string> { "Team 1", "Team 2", "Team 3", "Team 4", "Team 5", "Team 6" },
                Datasets = new List<IChartDataset>()
            };

        chartData.Datasets.Add(GetRandomLineChartDataset());
        chartData.Datasets.Add(GetRandomLineChartDataset());
        chartData.Datasets.Add(GetRandomLineChartDataset());

        chartOptions = new LineChartOptions
            {
                Responsive = true,
                Interaction = new Interaction { Mode = InteractionMode.Index }
            };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await lineChart.UpdateAsync(chartData, chartOptions);
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task AddDataAsync()
    {
        if (chartData is null || chartData.Datasets is null) return;

        chartData.Datasets.Add(GetRandomLineChartDataset());
        await lineChart.UpdateAsync(chartData, chartOptions);
    }

    private LineChartDataset GetRandomLineChartDataset()
    {
        // random color
        var c = Color.FromArgb(random.Next(256), random.Next(256), random.Next(256));

        return new LineChartDataset()
            {
                Label = $"Line chart dataset {chartData.Datasets.Count + 1}",
                Data = new List<double> { random.Next(200), random.Next(200), random.Next(200), random.Next(200), random.Next(200), random.Next(200) },
                BackgroundColor = new List<string> { c.ToRgbString() },
                BorderColor = new List<string> { c.ToRgbString() },
                BorderWidth = new List<double> { 2 },
                HoverBorderWidth = new List<double> { 4 },
                PointBackgroundColor = new List<string> { c.ToRgbString() },
                PointRadius = new List<int> { 0 }, 
                PointHoverRadius = new List<int> { 4 },
            };
    }
}