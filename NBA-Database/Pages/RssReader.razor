@page "/rssreader"
@using System.Xml;

<h3>Feed RSS</h3>

@if (newsItems != null)
{
    @foreach (var item in newsItems)
    {
        @if(item == newsItems.FirstOrDefault())
        {
            <div class="first-news-item">
                <div class="image-container">
                    <img src="@item.ImageUrl" class="newsImg" alt="News Image" />
                </div>
                <div class="news-content">
                    <h4><a href="@item.Link" target="_blank" class="aTitle"><span class="title">@item.Title</span></a></h4>
                    <p class="description">@item.Description</p>
                    <p class="date">@item.DatePublished</p>
                </div>
            </div>
        }
        else
        {
            <div class="news-item">
                <div class="image-container">
                    <img src="@item.ImageUrl" class="newsImg" alt="News Image" />
                </div>
                <div class="news-content">
                    <h4><a href="@item.Link" target="_blank" class="aTitle"><span class="title">@item.Title</span></a></h4>
                    <p class="description">@item.Description</p>
                    <p class="date">@item.DatePublished</p>
                </div>
            </div>
        }
        
    }
}

@code {
    List<NewsItem> newsItems;

    protected override async Task OnInitializedAsync()
    {
        // URL del feed RSS
        string url = "https://www.espn.com/espn/rss/nba/news";

        // Crear una instancia de HttpClient
        HttpClient httpClient = new HttpClient();

        // Descargar el contenido del feed RSS
        string xmlContent = await httpClient.GetStringAsync(url);

        // Crear un objeto XmlDocument y cargar el contenido XML
        XmlDocument xmlDoc = new XmlDocument();
        xmlDoc.LoadXml(xmlContent);

        // Obtener todos los elementos 'item' del feed
        XmlNodeList itemNodes = xmlDoc.SelectNodes("//item");

        newsItems = new List<NewsItem>();

        // Iterar sobre los elementos 'item' y obtener la información necesaria
        foreach (XmlNode itemNode in itemNodes)
        {
            XmlNode titleNode = itemNode.SelectSingleNode("title");
            XmlNode descriptionNode = itemNode.SelectSingleNode("description");
            XmlNode linkNode = itemNode.SelectSingleNode("link");
            XmlNode linkImageNode = itemNode.SelectSingleNode("enclosure");
            string linkImage = string.Empty;
            XmlNode dateNode = itemNode.SelectSingleNode("pubDate");

            string title = titleNode.InnerText;
            string description = descriptionNode.InnerText;
            string link = linkNode.InnerText;
            //Si no se recibe imagen de las urls muestra una por defecto
            if (linkImageNode != null && linkImageNode.Attributes["url"] != null)
            {
                linkImage = linkImageNode.Attributes["url"].Value;
            }
            else
            {
                linkImage = "./assets/image/mundo.png";
            }
            string date = dateNode.InnerText;

            
            NewsItem newsItem = new NewsItem
                {
                    Title = title,
                    Description = description,
                    Link = link,
                    ImageUrl = linkImage,
                    DatePublished = date
                };

            newsItems.Add(newsItem);
        }
    }

    public class NewsItem
    {
        public string Title { get; set; }
        public string Description { get; set; }
        public string Link { get; set; }
        public string ImageUrl { get; set; }
        public string DatePublished { get; set; }
    }
}

